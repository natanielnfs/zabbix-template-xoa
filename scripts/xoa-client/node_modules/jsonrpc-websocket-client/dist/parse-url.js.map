{"version":3,"sources":["../src/parse-url.js"],"names":["PROTOCOL_RE","url","window","base","String","location","Error","isSecure","rest","exec","join"],"mappings":";;;;;AACA;;AAIA,MAAMA,WAAW,GAAG,iCAApB;;eAEgBC,GAAD,IAAS;AAEtB,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC,UAAMC,IAAI,GAAGC,MAAM,CAACF,MAAM,CAACG,QAAR,CAAnB;AACAJ,IAAAA,GAAG,GAAGA,GAAG,GAAG,kBAAWE,IAAX,EAAiBF,GAAjB,CAAH,GAA2BE,IAApC;AACD,GAHD,MAGO,IAAI,CAACF,GAAL,EAAU;AACf,UAAM,IAAIK,KAAJ,CAAU,wBAAV,CAAN;AACD;;AAID,QAAM,GAAGC,QAAQ,GAAG,GAAd,EAAmBC,IAAnB,IAA2BR,WAAW,CAACS,IAAZ,CAAiBR,GAAjB,CAAjC;AACA,SAAO,CAAC,IAAD,EAAOM,QAAQ,IAAI,EAAnB,EAAuB,KAAvB,EAA8BC,IAA9B,EAAoCE,IAApC,CAAyC,EAAzC,CAAP;AACD,C","sourcesContent":["// eslint-disable-next-line node/no-deprecated-api\nimport { resolve as resolveUrl } from \"url\";\n\n// ===================================================================\n\nconst PROTOCOL_RE = /^(?:(?:http|ws)(s?):\\/\\/)?(.+)$/;\n\nexport default (url) => {\n  // Resolve the URL against the current URL if any.\n  if (typeof window !== \"undefined\") {\n    const base = String(window.location);\n    url = url ? resolveUrl(base, url) : base;\n  } else if (!url) {\n    throw new Error(\"cannot get current URL\");\n  }\n\n  // Prepends the protocol if missing and replace HTTP by WS if\n  // necessary.\n  const [, isSecure = \"s\", rest] = PROTOCOL_RE.exec(url);\n  return [\"ws\", isSecure || \"\", \"://\", rest].join(\"\");\n};\n"],"file":"parse-url.js"}